# -*- coding: utf-8 -*-
"""Lumaa_Application_Project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xQsyEY99dlUaXxG1b2tcneFbQbBVrK5B
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

file_path = "/content/drive/My Drive/Project_dataset/movies.csv"
df = pd.read_csv(file_path)
print(df.head())

# Handle missing values and remove duplicates
df.fillna("", inplace=True)
df.drop_duplicates(inplace=True)

# Combine text features: Genre, Plot Summary, and Keywords
df["combined_features"] = df["Genre"] + " " + df["Plot_Summary"] + " " + df["Keywords"]

# Display processed data
df[["Title", "combined_features"]].head()

from sklearn.feature_extraction.text import TfidfVectorizer

# Initialize TF-IDF Vectorizer and transform text data into TF-IDF vectors
vectorizer = TfidfVectorizer(stop_words="english")
tfidf_matrix = vectorizer.fit_transform(df["combined_features"])

# Get feature names (words)
feature_names = vectorizer.get_feature_names_out()

# Convert TF-IDF matrix to DataFrame for easier visualization
tfidf_df = pd.DataFrame(tfidf_matrix.toarray(), columns=feature_names)

from sklearn.metrics.pairwise import cosine_similarity

def recommend_movies(user_input, top_n=5):
    # Convert user input into a TF-IDF vector
    user_tfidf = vectorizer.transform([user_input])

    # Compute cosine similarity between user input and movie dataset
    similarity_scores = cosine_similarity(user_tfidf, tfidf_matrix).flatten()

    # Get indices of top N most similar movies
    top_indices = similarity_scores.argsort()[::-1][:top_n]

    # Create recommendations
    recommendations = df.iloc[top_indices][["Title", "Genre", "IMDb_Rating", "Plot_Summary"]].copy()
    recommendations["Similarity_Score"] = similarity_scores[top_indices]
    recommendations.drop_duplicates(subset=["Title"], inplace=True) #recommend unique movies only

    return recommendations

# Take user input
user_input = input("\nüîç Enter a brief description of the type of movies you like: ")
top_n = int(input("üé¨ How many recommendations would you like? (Default is 5): ") or 5)

recommended_movies = recommend_movies(user_input, top_n)

# Display recommendations
print("\n **Top Movie Recommendations for You:** \n")
display(recommended_movies)

'''
My salary expectations per month is 2500 USD.
'''